// <auto-generated />
using System;
using Gruggbot.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Gruggbot.Data.Migrations
{
    [DbContext(typeof(GruggbotContext))]
    [Migration("20201105035741_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0-rc.2.20475.6");

            modelBuilder.Entity("Gruggbot.DomainModel.Command", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Commands");
                });

            modelBuilder.Entity("Gruggbot.DomainModel.CommandAlias", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Alias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CommandId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CommandId");

                    b.ToTable("Aliases");
                });

            modelBuilder.Entity("Gruggbot.DomainModel.CommandMessage", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CommandId")
                        .HasColumnType("int");

                    b.Property<string>("MessageType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sequence")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CommandId");

                    b.ToTable("CommandMessages");

                    b.HasDiscriminator<string>("MessageType").HasValue("CommandMessage");
                });

            modelBuilder.Entity("Gruggbot.DomainModel.ImageDetails", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ImageDetails");
                });

            modelBuilder.Entity("Gruggbot.DomainModel.CountdownCommand", b =>
                {
                    b.HasBaseType("Gruggbot.DomainModel.Command");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Event")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("CountdownCommands");
                });

            modelBuilder.Entity("Gruggbot.DomainModel.CommandMessageImage", b =>
                {
                    b.HasBaseType("Gruggbot.DomainModel.CommandMessage");

                    b.Property<int>("ImageId")
                        .HasColumnType("int");

                    b.HasIndex("ImageId");

                    b.HasDiscriminator().HasValue("ImageMessage");
                });

            modelBuilder.Entity("Gruggbot.DomainModel.CommandAlias", b =>
                {
                    b.HasOne("Gruggbot.DomainModel.Command", null)
                        .WithMany("Aliases")
                        .HasForeignKey("CommandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gruggbot.DomainModel.CommandMessage", b =>
                {
                    b.HasOne("Gruggbot.DomainModel.Command", null)
                        .WithMany("Messages")
                        .HasForeignKey("CommandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gruggbot.DomainModel.CountdownCommand", b =>
                {
                    b.HasOne("Gruggbot.DomainModel.Command", null)
                        .WithOne()
                        .HasForeignKey("Gruggbot.DomainModel.CountdownCommand", "ID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gruggbot.DomainModel.CommandMessageImage", b =>
                {
                    b.HasOne("Gruggbot.DomainModel.ImageDetails", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Image");
                });

            modelBuilder.Entity("Gruggbot.DomainModel.Command", b =>
                {
                    b.Navigation("Aliases");

                    b.Navigation("Messages");
                });
#pragma warning restore 612, 618
        }
    }
}
